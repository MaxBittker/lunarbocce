{"version":3,"sources":["webpack:///webpack/bootstrap 4d48523603c8e093e210","webpack:///./entry.ts","webpack:///./src/Render.ts","webpack:///./src/Universals.ts","webpack:///./src/Game.ts","webpack:///./src/Ball.ts","webpack:///./~/victor/index.js","webpack:///./src/Body.ts","webpack:///./src/Sound.ts","webpack:///./src/Planet.ts","webpack:///./src/Control.ts"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA,8BAA6B,kBAAkB;AAC/C,8BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA,yCAAwC,eAAe;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,aAAY;AACZ;AACA;AACA;AACA,UAAS;AACT;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACnyCA,KAAM,UAAU,GACd,UAAC,CAAM,EAAE,CAAM;KACX,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAC,CAAC,CAAC,MAAM,CAAC;AAClE,EAAC;AAIU,mBAAU,cAJpB;;;;;;;;ACXH,KAAI,KAAK,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC;AAExC,KAAM,SAAS,GAAG,UAAC,MAAa;KAC9B,EAAE,EAAC,MAAM,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAC,IAAI,IAAE,KAAK,CAAC,WAAW,KAAG,CAAC,CAAC,CAAC,EAAC;SAClE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,mBAAmB;SAClC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;SACtB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,MAAM,CAAC;SACjC,KAAK,CAAC,IAAI,EAAE;KACZ,CAAC;AACH,EAAC;AAED;mBAAe,SAAS;;;;;;;;ACVxB,KAAO,MAAM,uBAAW,CAAQ,CAAC;AAGjC;KAQE,gBAAY,QAAQ,EAAC,IAAI,EAAC,MAAM,EAAC,KAAK;SACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ;SACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC;SAC/B,IAAI,CAAC,IAAI,GAAG,IAAI;SAChB,IAAI,CAAC,MAAM,GAAG,MAAM;SACpB,IAAI,CAAC,KAAK,GAAG,KAAK;KACpB,CAAC;KACH,aAAC;AAAD,EAAC;AAfD;yBAeC;;;;;;;;AChBD,KAAO,MAAM,uBAAW,CAAQ,CAAC;AAEjC;KAOE,iBAAY,MAAyB,EAAC,IAAS;SAPjD,iBAuBC;SAfG,IAAI,CAAC,MAAM,GAAG,MAAM;SACpB,IAAI,CAAC,IAAI,GAAG,IAAI;SAChB,MAAM,CAAC,WAAW,GAAG,UAAC,CAAC;aACrB,KAAI,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC,OAAO,CAAC;SAClD,CAAC;SACD,MAAM,CAAC,WAAW,GAAG,UAAC,CAAC;aACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC,OAAO,CAAC;SACjD,CAAC;SACD,MAAM,CAAC,SAAS,GAAG,UAAC,CAAC;aACnB,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAI,CAAC,SAAS,EAAC,KAAI,CAAC,QAAQ,CAAC;aAC9C,KAAI,CAAC,SAAS,GAAG,SAAS;SAC5B,CAAC;KACH,CAAC;KAGH,cAAC;AAAD,EAAC;AAvBD;0BAuBC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4d48523603c8e093e210\n **/","import Renderer from \"./src/Render\";\nimport Ball from \"./src/Ball\";\nimport Game from \"./src/Game\";\nimport Universals from \"./src/Universals\";\nimport Control from \"./src/Control\";\n\nimport Victor = require('victor')\n\n\nconst initCanvas = ()=> {\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = Universals.width;\n  canvas.height = Universals.height;\n  let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n\n\n  document.body.appendChild(canvas);\n\n  let renderer = new Renderer(ctx);\n  let game = new Game(renderer)\n  let controls = new Control(canvas,game)\n  renderer.controls = controls\n\n  return game\n}\nlet game = initCanvas()\n\nconst frame = (timestamp) => {\n  game.tick()\n  window.requestAnimationFrame(frame);\n}\n\n\nwindow.requestAnimationFrame(frame);\n\n\n\n/** WEBPACK FOOTER **\n ** ./entry.ts\n **/","// a special import statement to require node modules...\nimport assign = require(\"object-assign\");\nimport Ball from \"./Ball\";\nimport Universals from \"./Universals\";\nimport Control from \"./Control\";\n\nimport {Body} from \"./Body\";\n\nexport default class Renderer {\n\n  private ctx: CanvasRenderingContext2D;\n  public controls: Control\n\n  constructor(ctx:CanvasRenderingContext2D) {\n    this.ctx = ctx\n  }\n  render(balls: Array<Body>) {\n    this.ctx.fillStyle = `hsla(180, 0% ,10%,0.5)`\n\n    this.ctx.fillRect(0,0,Universals.width,Universals.height)\n    for (let i in balls){\n      let ball = balls[i]\n      this.renderBall(ball)\n    }\n    this.renderShot()\n  }\n  renderBall(ball){\n\n    let lgrd: CanvasGradient = this.ctx.createLinearGradient(\n      ball.position.x-ball.radius,\n      ball.position.y-ball.radius,\n      ball.position.x+ball.radius,\n      ball.position.y+ball.radius);\n    let rgrd: CanvasGradient = this.ctx.createRadialGradient(\n      ball.position.x,\n      ball.position.y,\n      0,\n      ball.position.x,\n      ball.position.y,\n      ball.radius);\n\n    lgrd.addColorStop(0,\"black\");\n    lgrd.addColorStop(1,\"white\");\n\n    rgrd.addColorStop(0,\"rgba(200, 0, 200, 0.1)\");\n    rgrd.addColorStop(1,\"rgba(0, 0, 200, 0.2)\");\n\n    this.ctx.fillStyle=lgrd;\n    this.ctx.beginPath()\n    this.ctx.arc(ball.position.x,ball.position.y,ball.radius,0,180)\n    this.ctx.fill()\n\n    this.ctx.fillStyle=rgrd;\n    this.ctx.beginPath()\n    this.ctx.arc(ball.position.x,ball.position.y,ball.radius,0,180)\n    this.ctx.fill()\n\n  }\n  renderShot(){\n    if(this.controls.startDrag &&this.controls.mousePos){\n    this.ctx.fillStyle=\"rgba(255, 255, 255, 0.09)\";\n    this.ctx.strokeStyle=\"rgba(200, 200, 200, 0.2)\";\n    this.ctx.lineWidth = 5;\n    this.ctx.beginPath()\n    this.ctx.moveTo(this.controls.startDrag.x,this.controls.startDrag.y);\n    this.ctx.lineTo(this.controls.mousePos.x,this.controls.mousePos.y)\n    this.ctx.stroke()\n\n    this.ctx.beginPath()\n    this.ctx.arc(this.controls.startDrag.x,\n      this.controls.startDrag.y,\n      this.controls.startDrag.distance(this.controls.mousePos)/5,\n      0,180)\n    this.ctx.fill()}\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Render.ts\n **/","\n\nexport default {\n  delta : 0.1,\n  width: 800,\n  height : 450,\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Universals.ts\n **/","import Universals from \"./Universals\";\nimport Renderer from \"./Render\";\nimport Ball from \"./Ball\";\nimport Planet from \"./Planet\";\nimport {Body,seperation} from \"./Body\";\nimport Victor = require('victor')\n\n\nexport default class Game {\n\n  public renderer: Renderer\n  public planets: Array<Planet>\n  public balls: Array<Ball>\n\n\n  constructor(renderer: Renderer) {\n    this.renderer = renderer\n\n    this.balls= [new Ball(\n      new Victor(0,0),\n      new Victor(10,0),\n      10,\n      15,\n      \"red\")]\n    this.planets = this.genPlanets(5)\n  }\n  randomPoint(): Victor{\n    return new Victor(Math.random()*Universals.width,\n                      Math.random()*Universals.height)\n  }\n  genPlanets(n){\n    let planets = []\n    for(;n>0; n--){\n      let radius = Math.random()*100 + 10\n      let newPlanet = new Planet(\n        this.randomPoint(),\n        Math.PI*radius*radius,\n        // Math.PI*(4/3)*radius*radius*radius,\n        radius,\n        \"red\")\n      let distances = planets.map(p=>seperation(newPlanet,p))\n      if(Math.min(...distances)<10){\n        n++\n      }else{\n        planets.push(newPlanet)\n      }\n    }\n    return planets\n  }\n  tick(){\n    let bodys: Array<Body> = [...this.balls,...this.planets]//this.balls.concat(this.planets)\n    this.renderer.render(bodys)\n\n    this.balls.forEach(\n      b=>b.update(this.planets, this.balls)\n    )\n  }\n  launch(start:Victor,end:Victor){\n    let launched: Ball = new Ball(\n      start,\n      start.clone().subtract(end).multiplyScalar(0.65),\n      10,\n      15,\n      \"red\"\n    )\n    this.balls.push(launched)\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Game.ts\n **/"," import Victor = require('victor')\nimport Universals from \"./Universals\";\nimport {Body,seperation} from \"./Body\";\nimport playSound from \"./Sound\";\nenum bodyType {Ball, Planet};\n\n\n\nexport default class Ball {\n\n  public position: Victor;\n  public velocity: Victor;\n  public mass: number;\n  public radius: number;\n  public color: string;\n\n\n  constructor(position: Victor,\n              velocity: Victor,\n              mass: number,\n              radius: number,\n              color: string) {\n    this.position = position\n    this.velocity = velocity\n    this.mass = mass\n    this.radius = radius\n    this.color = color\n  }\n  update(planets: Array<Body>, balls: Array<Body>) {\n    let forceAcc = new Victor(0,0)\n    for(let p in planets){\n      let planet = planets[p]\n      let force = 6.674 * Math.pow(10,0) *\n                  planet.mass * this.mass /\n                   Math.pow(this.position.distance(planet.position),2)\n      forceAcc.add(planet.position.clone()\n                    .subtract(this.position)\n                    .normalize()\n                    .multiplyScalar(force)\n                  )\n    }\n\n    this.velocity.add(\n      forceAcc.multiplyScalar(Universals.delta / this.mass)\n    )\n    //apply update\n    this.position.add(\n      this.velocity.clone().multiplyScalar(Universals.delta)\n    )\n\n    for(let p in planets){\n      let planet = planets[p]\n      if(seperation(this, planet) < 0){\n        let n: Victor = planet.position.clone()\n                            .subtract(this.position)\n                            .normalize()\n        this.velocity.subtract(\n          n.clone().multiplyScalar(this.velocity.dot(n) * 2)\n        )\n\n        let delta: Victor  = (this.position.clone().subtract(planet.position));\n        let d:number = delta.length();\n        let mtd:Victor = delta.clone().multiplyScalar(((this.radius + planet.radius) - d )/ d );\n\n        this.position.add(mtd);\n        playSound(this.velocity.length()/50)\n        this.velocity.multiplyScalar(0.7)\n      }\n    }\n    for( let b in balls){\n      let ball = balls[b]\n      if((ball !== this) && (seperation(this, ball) < 0)){\n\n        let delta: Victor  = (this.position.clone().subtract(ball.position));\n        let d:number = delta.length();\n\n        let mtd:Victor = delta.clone().multiplyScalar(((this.radius + ball.radius) - d )/ d );\n        // resolve intersection --\n        // inverse mass quantities\n        let im1:number = 1 / this.mass;\n        let im2:number = 1 / ball.mass;\n        // push-pull them apart based off their mass\n        this.position.add(mtd.clone().multiplyScalar(im1 / (im1 + im2)));\n        ball.position.subtract(mtd.clone().multiplyScalar(im2 / (im1 + im2)));\n        // impact speed\n        let v:Victor = this.velocity.clone().subtract(ball.velocity);\n        let vn:number = v.dot(mtd.clone().normalize());\n        // sphere intersecting but moving away from each other already\n        if (vn > 0){\n          console.log(\"contunue\")\n          continue;\n        }\n          console.log(\"APPLY\")\n          let i:number = (-(0.9) * vn) / (im1 + im2);\n          let impulse:Victor = mtd.clone().multiplyScalar(i);\n          this.velocity.add(impulse.clone().multiplyScalar(im1));\n          ball.velocity.subtract(impulse.clone().multiplyScalar(im2))\n          playSound(impulse.length()/50)\n\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Ball.ts\n **/","exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/victor/index.js\n ** module id = 6\n ** module chunks = 0\n **/","interface Body {\n  position: Victor;\n  velocity: Victor;\n  mass: number;\n  radius: number;\n  color: string;\n}\n\nconst seperation:(a: Body, b:Body)=>number =\n  (a:Body, b:Body):number=>{\n      return (a.position.distance(b.position)) - (a.radius+b.radius)\n  }\n\nexport default Body\n\nexport {Body,seperation}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Body.ts\n **/","let sound = new Audio('sounds/b2b1.wav')\n\nconst playSound = (volume:number)=>{\n  if(volume>0.2 && (sound.currentTime>0.01||sound.currentTime===0)){\n  sound.pause(); // Perhaps optional\n  sound.currentTime = 0;\n  sound.volume = Math.min(1,volume)\n  sound.play()\n  }\n}\n\nexport default playSound\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Sound.ts\n **/","import Universals from \"./Universals\";\nimport Victor = require('victor')\n\n\nexport default class Planet {\n\n  public position: Victor;\n  public velocity: Victor;\n  public mass: number;\n  public radius: number;\n  public color: string;\n\n  constructor(position,mass,radius,color) {\n    this.position = position\n    this.velocity = new Victor(0,0)\n    this.mass = mass\n    this.radius = radius\n    this.color = color\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Planet.ts\n **/","// a special import statement to require node modules...\nimport Universals from \"./Universals\";\nimport Game from \"./Game\";\nimport Victor = require('victor')\n\nexport default class Control {\n\n  private canvas: HTMLCanvasElement;\n  private game: Game;\n  public startDrag: Victor;\n  public mousePos: Victor;\n\n  constructor(canvas: HTMLCanvasElement,game:Game) {\n    this.canvas = canvas\n    this.game = game\n    canvas.onmousedown = (e)=>{\n      this.startDrag = new Victor(e.offsetX,e.offsetY)\n    }\n    canvas.onmousemove = (e)=>{\n      this.mousePos = new Victor(e.offsetX,e.offsetY)\n    }\n    canvas.onmouseup = (e)=>{\n      this.game.launch(this.startDrag,this.mousePos)\n      this.startDrag = undefined\n    }\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Control.ts\n **/"],"sourceRoot":""}